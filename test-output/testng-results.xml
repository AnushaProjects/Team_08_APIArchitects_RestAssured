<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="92" passed="77" failed="15" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-02T18:06:56 EDT" name="Default suite" finished-at="2024-04-02T18:07:17 EDT" duration-ms="21340">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-04-02T18:06:56 EDT" name="Default test" finished-at="2024-04-02T18:07:17 EDT" duration-ms="21340">
      <class name="test_runner_team08.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:06:56 EDT" name="setUpClass" finished-at="2024-04-02T18:06:57 EDT" duration-ms="769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@156322ce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:06:57 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:06:59 EDT" duration-ms="1848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to generate token with valid credential"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:06:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:06:59 EDT" duration-ms="566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a new Admin with valid endpoint and request body with mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:06:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:00 EDT" duration-ms="611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint with Existing EmailId and PhoneNumber"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:00 EDT" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint with Existing EmailId and PhoneNumber"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:00 EDT" duration-ms="235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint with Existing EmailId and PhoneNumber"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:01 EDT" duration-ms="558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a new Admin with valid endpoint and request body with mandatory fields and Additional fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:01 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a new Admin with valid endpoint and request body with mandatory fields and Additional fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a new Admin without request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:02 EDT" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:02 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:03 EDT" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:03 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:03 EDT" duration-ms="411" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status validation expected:<400> but was:<201>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status validation expected:<400> but was:<201>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at utilities_team08.CommonValidation.statusValidations(CommonValidation.java:71)
at step_definition_team08.UserModuleStepDefinition.admin_receives_bad_request_status_with_message_and_boolean_success_details(UserModuleStepDefinition.java:299)
at ✽.Admin receives 400 Bad Request Status with message and boolean success details(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:48)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:03 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:03 EDT" duration-ms="408" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and invalid values in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status validation expected:<400> but was:<201>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status validation expected:<400> but was:<201>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at utilities_team08.CommonValidation.statusValidations(CommonValidation.java:71)
at step_definition_team08.UserModuleStepDefinition.admin_receives_bad_request_status_with_message_and_boolean_success_details(UserModuleStepDefinition.java:299)
at ✽.Admin receives 400 Bad Request Status with message and boolean success details(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:48)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:03 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:04 EDT" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:04 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:04 EDT" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:04 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:04 EDT" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:04 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:04 EDT" duration-ms="158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:04 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:04 EDT" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:04 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:04 EDT" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:04 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:05 EDT" duration-ms="425" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status validation expected:<400> but was:<201>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status validation expected:<400> but was:<201>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at utilities_team08.CommonValidation.statusValidations(CommonValidation.java:71)
at step_definition_team08.UserModuleStepDefinition.admin_receives_bad_request_status_with_message_and_boolean_success_details(UserModuleStepDefinition.java:299)
at ✽.Admin receives 400 Bad Request Status with message and boolean success details(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:65)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:05 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:05 EDT" duration-ms="539" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to create a Admin with valid endpoint and missing fields in request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status validation expected:<400> but was:<201>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status validation expected:<400> but was:<201>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at utilities_team08.CommonValidation.statusValidations(CommonValidation.java:71)
at step_definition_team08.UserModuleStepDefinition.admin_receives_bad_request_status_with_message_and_boolean_success_details(UserModuleStepDefinition.java:299)
at ✽.Admin receives 400 Bad Request Status with message and boolean success details(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:65)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:05 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:05 EDT" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to create a new Admin with request body without authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:05 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:06 EDT" duration-ms="530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all the available roles with Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:06 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:06 EDT" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all the available roles without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:06 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:06 EDT" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all the available roles with invalid End point"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:06 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:07 EDT" duration-ms="532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to retrieve all Admin with valid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:07 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:08 EDT" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all the available Admin without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:08 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:08 EDT" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all the available Admin with invalid End point"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:08 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:08 EDT" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to retrieve a Admin with valid Admin ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:08 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:08 EDT" duration-ms="121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to retrieve a Admin with valid Admin ID and invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:08 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:08 EDT" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive Admin with valid Admin ID without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:08 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to retrieve a Admin with Invalid Admin ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to retrieve all active Admins"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all active Admins without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to retrieve all active Admins with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get count of active and inactive Admins"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get count of active and inactive Admins without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:09 EDT" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to get count of active and inactive Admins with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:09 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get count of active and inactive Admins"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get count of active and inactive Admins"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get count of active and inactive Admins"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get count of active and inactive Admins by invalid role ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive Admins by valid role ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive Admins by Invalid role ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:10 EDT" duration-ms="145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["heck if admin is able to retreive Admins by valid role ID without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:10 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:11 EDT" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to get the Admins by role with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:11 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:11 EDT" duration-ms="643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all the available roles with Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:11 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:12 EDT" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retrieve all Admins with filters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:12 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:12 EDT" duration-ms="157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role id of a Admin by valid Admin id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:12 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:13 EDT" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:13 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:13 EDT" duration-ms="160" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to assign Admin to with program/batch by Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at step_definition_team08.UserModuleStepDefinition.admin_receives_ok_status_with_response_body(UserModuleStepDefinition.java:834)
at ✽.Admin receives 200 OK Status with "PUT - Update Admin Role Program Batch status" response body(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:265)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:13 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:13 EDT" duration-ms="124" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get the Admins by program batches for valid batch ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Success Ok expected:<200> but was:<400>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Success Ok expected:<200> but was:<400>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at utilities_team08.CommonValidation.statusValidations(CommonValidation.java:71)
at step_definition_team08.UserModuleStepDefinition.admin_receives_ok_status_with_response_body(UserModuleStepDefinition.java:408)
at ✽.Admin receives 200 OK Status with response body "ProgramBatches"(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:271)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:13 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:13 EDT" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get the Admins by program batches for invalid batch ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:13 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:13 EDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get the Admins by program batches for valid batch ID without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:13 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:13 EDT" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to get the Admins by program batches with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:13 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="130" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get the Admins for valid program Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Success Ok expected:<200> but was:<400>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Success Ok expected:<200> but was:<400>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at utilities_team08.CommonValidation.statusValidations(CommonValidation.java:71)
at step_definition_team08.UserModuleStepDefinition.admin_receives_ok_status_with_response_body(UserModuleStepDefinition.java:408)
at ✽.Admin receives 200 OK Status with response body "Program"(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:296)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get the Admins by program batches for invalid batch ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to get the Admins by program for valid program ID without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin able to get the Admins by program batches with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="137" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update the Admin login status by Admin ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at step_definition_team08.UserModuleStepDefinition.admin_receives_ok_status_with_response_body(UserModuleStepDefinition.java:834)
at ✽.Admin receives 200 OK Status with "Update Admin login status" response body(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:320)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update Admin details with Admin id and valid data in all fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to delete a Admin with valid Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:14 EDT" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin with Admin Role Id with already existing Admin role ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role id of a Admin by valid Admin id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id and invalid role status"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "Object.getClass()" because "bean" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "bean" is null
at org.json.JSONObject.populateMap(JSONObject.java:1491)
at org.json.JSONObject.<init>(JSONObject.java:364)
at request_body_raw_team08.UserRequestBody.convertJsonToString(UserRequestBody.java:321)
at step_definition_team08.UserModuleStepDefinition.admin_creates_update_user_role_status_put_request_with_in_valid_role_status_in_request_body(UserModuleStepDefinition.java:941)
at ✽.Admin creates Update User Role Status PUT Request with in valid role status in request body(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:345)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role id of a Admin with invalid Admin id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with invalid Admin id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to assign Admin to with program/batch by invalid Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to assign Admin to with program/batch by invalid Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to assign Admin to with program/batch by invalid Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to assign Admin to with program/batch by invalid Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:15 EDT" duration-ms="24" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin role ID with valid Admin role ID with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at step_definition_team08.UserModuleStepDefinition.admin_sends_https_request_with_invalid_endpoint(UserModuleStepDefinition.java:1094)
at ✽.Admin sends HTTPS Request with invalid "PUT - Update Admin Role ID" endpoint(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:376)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin role ID with valid Admin role ID with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at step_definition_team08.UserModuleStepDefinition.admin_sends_https_request_with_invalid_endpoint(UserModuleStepDefinition.java:1096)
at ✽.Admin sends HTTPS Request with invalid "PUT - Update Admin role status by Admin ID" endpoint(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:380)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin role ID with valid Admin role ID with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at step_definition_team08.UserModuleStepDefinition.admin_sends_https_request_with_invalid_endpoint(UserModuleStepDefinition.java:1098)
at ✽.Admin sends HTTPS Request with invalid "PUT - Update Admin Role Program Batch status" endpoint(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:384)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin role ID with valid Admin role ID with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at step_definition_team08.UserModuleStepDefinition.admin_sends_https_request_with_invalid_endpoint(UserModuleStepDefinition.java:1100)
at ✽.Admin sends HTTPS Request with invalid "PUT - Update Admin login status" endpoint(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:388)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="35" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin role ID with valid Admin role ID with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)
at io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
at step_definition_team08.UserModuleStepDefinition.admin_sends_https_request_with_invalid_endpoint(UserModuleStepDefinition.java:1090)
at ✽.Admin sends HTTPS Request with invalid "PUT - User" endpoint(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:392)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update a Admin role ID with valid Admin role ID with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 0, was 1. Redundant path parameters are: userId=U648.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.delete(RequestSpecificationImpl.groovy:184)
at io.restassured.internal.RequestSpecificationImpl.delete(RequestSpecificationImpl.groovy)
at step_definition_team08.UserModuleStepDefinition.admin_sends_https_request_with_invalid_endpoint(UserModuleStepDefinition.java:1092)
at ✽.Admin sends HTTPS Request with invalid "DELETE - User" endpoint(file:///Users/anushakarthick/NumpyNinja/Team_08_APIArchitects_RestAssured/src/test/resources/features/004_User_Module_and_BatchProgramMap.feature:395)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role id of a Admin by valid Admin id with no authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id with no authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id with no authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id with no authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id with no authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:16 EDT" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to update role status of a Admin with valid Admin id with no authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:17 EDT" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all Admins with assigned program batches"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:17 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:17 EDT" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all Admins with assigned program batches with No Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:17 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:17 EDT" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive assigned program batches for invalid AdminId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:17 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:17 EDT" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive assigned program batches for invalid AdminId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:17 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:17 EDT" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if admin is able to retreive all Admins with assigned program batches with No Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:17 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-02T18:07:17 EDT" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin able to delete a Admin with valid Admin Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:test_runner_team08.TestRunner@2ab4bc72]" started-at="2024-04-02T18:07:17 EDT" name="tearDownClass" finished-at="2024-04-02T18:07:17 EDT" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- test_runner_team08.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
